{"version":3,"sources":["app/constants.ts","app/widgets.tsx","app/report.tsx","app/reducer.ts","app/state.ts","app/permalink.tsx","app/app.tsx","workers/serviceWorker.js","index.tsx"],"names":["nDays","shabbat","sunday","regular","chagim","schoolVacation","Percentage","id","label","state","dispatch","PercentageLine","side","index","value","L","percentages","type","onChange","evt","n","Number","isNaN","handleChange","target","className","DirectDay","props","direct","DirectMonth","category","Report","getPerc","getDayExpense","percLabel","expensesLabel","expense","expensesPerDay","getShabbat","getSunday","getRegular","getChagim","getSchoolVacation","getRoom","expensesPerMonth","getClothing","clothing","getMedicine","medicine","getTotalExpenses","motherExpenses","fatherExpenses","makeBreakdown","shabbatDays","sundayDays","regularDays","chagimDays","schoolVacationDays","reducer","action","target_index","other_index","other_value","R","defaultState","school","room","validate","validateNumber","validatePair","Infinity","Permalink","str","JSON","stringify","onClick","window","location","hash","App","useReducer","hashString","decodeURIComponent","href","split","hashState","parse","console","log","e","getInitialState","Boolean","hostname","match","navigator","serviceWorker","ready","then","registration","unregister","ReactDOM","render","document","getElementById"],"mappings":"4LAAaA,EAAQ,CACjBC,QAAS,EACTC,OAAQ,EACRC,QAAS,GACTC,OAAQ,EACRC,eAAgB,G,OCMPC,EAAa,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,GAAIC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAEpCC,EAAiB,SAACC,GACpB,IAAMC,EAAiB,SAATD,EAAkB,EAAI,EAC9BE,EAAQC,IAAM,CAACR,EAAIM,GAAXE,CAAoBN,EAAMO,aASxC,OAAO,2BACHC,KAAK,OACLH,MAAOA,EACPI,SAAU,SAAAC,GAAG,OATI,SAACL,GAClB,IAAMM,EAAIC,OAAOP,GACbQ,MAAMF,IACNV,EAAS,CAACO,KAAe,SAATL,EAAkB,YAAc,aAAcL,KAAIO,MAAOM,IAM5DG,CAAaJ,EAAIK,OAAOV,WAIjD,OACI,yBAAKW,UAAU,cACX,yBAAKA,UAAU,SAASjB,GACvBG,EAAe,QACfA,EAAe,WAWfe,EAAY,SAACC,GAAD,OAAuBC,EAAO,iBAAPA,CAA0BD,IAC7DE,EAAc,SAACF,GAAD,OAAuBC,EAAO,mBAAPA,CAA4BD,IAExEC,EAAS,SAACE,GAAD,OAAoD,YAA+C,IAA7CvB,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAC7EI,EAAQC,IAAM,CAACe,EAAUvB,GAAjBQ,CAAuBN,GAQrC,OACI,yBAAKgB,UAAU,UACX,yBAAKA,UAAU,SAASjB,GACxB,2BACIS,KAAK,OACLH,MAAOA,EACPI,SAAU,SAAAC,GAAG,OAZJ,SAACL,GAClB,IAAMM,EAAIC,OAAOP,GACbQ,MAAMF,IACNV,EAAS,CAACO,KAAMa,EAAUvB,KAAIO,MAAOM,IAShBG,CAAaJ,EAAIK,OAAOV,aCtD5CiB,EAAS,SAAC,GAAyB,IAAxBtB,EAAuB,EAAvBA,MAEduB,EAAU,SAACnB,GAAD,OAAsB,SAACL,GAAD,OACjCC,EAAMO,YAAYR,GAAOK,GAAQ,MAGhCoB,EAAgB,SAACpB,GAAD,OAAsB,SAACqB,EAAuCC,GAChF,IAAMC,EAAU3B,EAAM4B,eAAeF,GACrC,OAAOnC,EAAMkC,IAAcF,EAAQnB,EAARmB,CAAgBE,GAAaE,KAEtDE,EAAa,SAACzB,GAAD,OACfoB,EAAepB,EAAfoB,CAAuB,UAAW,YAEhCM,EAAY,SAAC1B,GAAD,OACdoB,EAAepB,EAAfoB,CAAuB,SAAU,WAE/BO,EAAa,SAAC3B,GAAD,OACfoB,EAAepB,EAAfoB,CAAuB,UAAW,WAEhCQ,EAAY,SAAC5B,GAAD,OACdoB,EAAepB,EAAfoB,CAAuB,SAAU,WAE/BS,EAAoB,SAAC7B,GAAD,OACtBoB,EAAepB,EAAfoB,CAAuB,iBAAkB,mBAEvCU,EAAU,SAAC9B,GAAD,OAEZJ,EAAMmC,iBAFM,MAIVC,EAAa,SAAChC,GAAD,OAEL,IAAVA,EAAcJ,EAAMmC,iBAAiBE,SAAW,GAE9CC,EAAa,SAAClC,GAAD,OAEL,IAAVA,EAAcJ,EAAMmC,iBAAiBI,SAAW,GAE9CC,EAAmB,SAACpC,GACtB,OAAOyB,EAAWzB,GACZ0B,EAAU1B,GACV2B,EAAW3B,GACX4B,EAAU5B,GACV6B,EAAkB7B,GAClB8B,IACAE,EAAYhC,GACZkC,EAAYlC,IAGhBqC,EAAiBD,EAAiB,GAClCE,EAAiBF,EAAiB,GAElCG,EAAgB,SAACvC,GACnB,IAAMwC,EAAcrB,EAASnB,EAATmB,CAAiB,WAAahC,EAAMC,QAClDqD,EAAatB,EAASnB,EAATmB,CAAiB,UAAYhC,EAAME,OAChDqD,EAAcvB,EAASnB,EAATmB,CAAiB,WAAahC,EAAMG,QAClDqD,EAAaxB,EAASnB,EAATmB,CAAiB,UAAYhC,EAAMI,OAChDqD,EAAqBzB,EAASnB,EAATmB,CAAiB,kBAAoBhC,EAAMK,eACtE,OACI,4BACI,4BAAKgD,EAAL,cAA6Bf,EAAWzB,GAAxC,QACA,4BAAKyC,EAAL,6BAA2Cf,EAAU1B,GAArD,QACA,4BAAK0C,EAAL,wBAAuCf,EAAW3B,GAAlD,QACA,4BAAK2C,EAAL,YAA0Bf,EAAU5B,GAApC,QACA,4BAAK4C,EAAL,qBAA2Cf,EAAkB7B,GAA7D,QACA,qCAAW8B,IAAX,QACA,yCAAeE,EAAYhC,GAA3B,QACA,yCAAekC,EAAYlC,GAA3B,QACA,wBAAIY,UAAU,YAAW,yBAAKA,UAAU,eAAf,UAAqCwB,EAAiBpC,OAI3F,OACI,yBAAKY,UAAU,UACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,SAAf,uCACA,yBAAKA,UAAU,SAAf,4BACA,yBAAKA,UAAU,UAAUyB,EAAzB,kBAEA,yBAAKzB,UAAU,aAAf,iCAAyD,6BAAK,oDAAyB,iDAE3F,6BACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,SAAf,iCACA,yBAAKA,UAAU,UAAU0B,EAAiBD,EAA1C,QACA,6BACA,yBAAKzB,UAAU,SAAf,uBACC2B,EAAc,GACf,6BACA,yBAAK3B,UAAU,SAAf,uBACC2B,EAAc,M,QChGlBM,EAAU,SAACjD,EAAakD,GACjC,OAAOA,EAAO1C,MACV,IAAK,YACL,IAAK,aAAe,IACTA,EAAmB0C,EAAnB1C,KAAMH,EAAa6C,EAAb7C,MAAOP,EAAMoD,EAANpD,GACdqD,EAAwB,cAAT3C,EAAuB,EAAI,EAC1C4C,EAAuB,cAAT5C,EAAuB,EAAI,EACzC6C,EAAc,IAAMhD,EAE1B,OAAOiD,IACHhD,IAAM,CAAC,cAAeR,EAAIqD,GAA1B7C,CAA0CD,GAC1CC,IAAM,CAAC,cAAeR,EAAIsD,GAA1B9C,CAAyC+C,GAFtCC,CAGJtD,GAGP,IAAK,iBACL,IAAK,mBAAqB,IACfQ,EAAmB0C,EAAnB1C,KAAMH,EAAa6C,EAAb7C,MAAOP,EAAMoD,EAANpD,GAEpB,OAAOQ,IAAM,CAACE,EAAMV,GAAbQ,CAAmBD,EAAnBC,CAA2BN,GAGtC,QAAS,OAAOA,ICzBlBuD,EAAqB,CACvBhD,YAAa,CACTf,QAAS,CAAC,GAAI,IACdC,OAAQ,CAAC,GAAI,IACbC,QAAS,CAAC,GAAG,IACbC,OAAQ,CAAC,GAAG,IACZC,eAAgB,CAAC,GAAG,KAGxBgC,eAAgB,CACZpC,QAAS,IACTgE,OAAQ,GACR7D,OAAQ,IACRC,eAAgB,KAGpBuC,iBAAkB,CACdsB,KAAM,IACNpB,SAAU,IACVE,SAAU,MAuBZmB,EAAW,SAAC1D,GACd,OAA2B,MAAxBA,EAAM4B,gBACwB,MAA1B5B,EAAMmC,kBACe,MAArBnC,EAAMO,iBAIToD,EAAe3D,EAAMmC,iBAAiBE,WAClCsB,EAAe3D,EAAMmC,iBAAiBI,WACtCoB,EAAe3D,EAAMmC,iBAAiBsB,OACtCE,EAAe3D,EAAM4B,eAAejC,SACpCgE,EAAe3D,EAAM4B,eAAe4B,SACpCG,EAAe3D,EAAM4B,eAAehC,iBACpC+D,EAAe3D,EAAM4B,eAAepC,cAKxCoE,EAAa5D,EAAMO,YAAYZ,SAC3BiE,EAAa5D,EAAMO,YAAYb,UAC/BkE,EAAa5D,EAAMO,YAAYX,iBAC/BgE,EAAa5D,EAAMO,YAAYf,UAC/BoE,EAAa5D,EAAMO,YAAYd,WAUrCkE,EAAiB,SAAChD,GACpB,MAAkB,kBAAPA,IAAmBE,MAAMF,IAAMA,IAAMkD,KAM9CD,EAAe,SAAC,GAAsC,IAAD,6BACvD,OAAO,GC5EEE,EAAY,SAAC,GAA4B,IAA3B9D,EAA0B,EAA1BA,MACjB+D,EAAMC,KAAKC,UAAUjE,GAK3B,OACI,yBAAKgB,UAAU,YAAYkD,QAJP,WACpBC,OAAOC,SAASC,KAAON,IAGvB,qBCLKO,EAAM,WAAO,IAAD,EAEKC,qBAAWtB,EFaV,WAE3B,IAAMuB,EAAaC,mBAAmBN,OAAOC,SAASM,KAAKC,MAAM,KAAK,IAAM,IAE5E,IACI,IAAMC,EAAYZ,KAAKa,MAAML,GAC7B,OAAGd,EAASkB,IACRE,QAAQC,IAAI,oBACLH,IAEPE,QAAQC,IAAI,4CACLxB,GAEb,MAAOyB,GAEL,OADIF,QAAQC,IAAI,kDACTxB,GE5BmC0B,IAFzB,mBAEdjF,EAFc,KAEPC,EAFO,KAIrB,OACI,yBAAKe,UAAU,OACf,oEAGA,kBAAC,EAAD,CAAWhB,MAAOA,IAClB,yBAAKgB,UAAU,UACX,iCACI,0DAA+B,6BAAK,iEACpC,kBAAC,EAAD,CAAYlB,GAAG,UAAUC,MAAM,UAAUC,MAAOA,EAAOC,SAAUA,IACjE,kBAAC,EAAD,CAAYH,GAAG,SAASC,MAAM,wBAAwBC,MAAOA,EAAOC,SAAUA,IAC9E,kBAAC,EAAD,CAAYH,GAAG,UAAUC,MAAM,0BAA0BC,MAAOA,EAAOC,SAAUA,IACjF,kBAAC,EAAD,CAAYH,GAAG,SAASC,MAAM,SAASC,MAAOA,EAAOC,SAAUA,IAC/D,kBAAC,EAAD,CAAYH,GAAG,iBAAiBC,MAAM,kBAAkBC,MAAOA,EAAOC,SAAUA,IAChF,6BACA,8DAAmC,6BAAK,0CACxC,kBAACgB,EAAD,CAAWnB,GAAG,UAAUC,MAAM,UAAUC,MAAOA,EAAOC,SAAUA,IAChE,kBAACgB,EAAD,CAAWnB,GAAG,SAASC,MAAM,sBAAsBC,MAAOA,EAAOC,SAAUA,IAC3E,kBAACgB,EAAD,CAAWnB,GAAG,SAASC,MAAM,SAASC,MAAOA,EAAOC,SAAUA,IAC9D,kBAACgB,EAAD,CAAWnB,GAAG,iBAAiBC,MAAM,kBAAkBC,MAAOA,EAAOC,SAAUA,IAC/E,6BACA,gEAAqC,6BAAK,0CAC1C,kBAACmB,EAAD,CAAatB,GAAG,OAAOC,MAAM,iCAAiCC,MAAOA,EAAOC,SAAUA,IACtF,kBAACmB,EAAD,CAAatB,GAAG,WAAWC,MAAM,WAAWC,MAAOA,EAAOC,SAAUA,IACpE,kBAACmB,EAAD,CAAatB,GAAG,WAAWC,MAAM,WAAWC,MAAOA,EAAOC,SAAUA,KAExE,iCACI,0DAA+B,6BAAK,0CACpC,6BACA,kBAAC,EAAD,CAAQD,MAAOA,KAEnB,iCACI,+CACA,2BACI,8CADJ,6GAGI,8BAEJ,2BACI,+CADJ,mBAEoB,0CAFpB,iNAII,8BAEJ,2BACI,yCADJ,iMAII,8BAEJ,2BACI,wDADJ,qCAGI,8BAEJ,2BACI,yCADJ,6dAMI,8BAEJ,2BACI,kDADJ,0gBAMI,8BAEJ,2BACI,+CADJ,yEAE0E,0CAF1E,8HAGI,8BAEJ,kDA7CJ,0BA+CI,4BACI,4BAAKT,EAAMC,QAAX,aACA,4BAAKD,EAAME,OAAX,4BACA,4BAAKF,EAAMG,QAAX,uBACA,4BAAKH,EAAMI,OAAX,WACA,4BAAKJ,EAAMK,eAAX,oBACA,+DACA,kGAEJ,iC,MCvFIsF,QACW,cAA7Bf,OAAOC,SAASe,UAEe,UAA7BhB,OAAOC,SAASe,UAEhBhB,OAAOC,SAASe,SAASC,MACvB,2DA+GA,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,gBC7HAC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7c0ad589.chunk.js","sourcesContent":["export const nDays = {\n    shabbat: 4,\n    sunday: 4,\n    regular: 15,\n    chagim: 2,\n    schoolVacation: 5 \n}","import * as L from \"partial.lenses\";\nimport React, { Dispatch } from 'react';\n\n\ninterface PercentageProps {\n    id: string;\n    label: string;\n    state: State;\n    dispatch: Dispatch<DISPATCHER_ACTION_PERC>;\n}\n\nexport const Percentage = ({id, label, state, dispatch}:PercentageProps) => {\n    \n    const PercentageLine = (side:\"left\" | \"right\") => {\n        const index = side === \"left\" ? 0 : 1;\n        const value = L.get([id, index]) (state.percentages);\n\n\n        const handleChange = (value:string) => {\n            const n = Number(value);\n            if(!isNaN(n)) {\n                dispatch({type: side === \"left\" ? \"perc-left\" : \"perc-right\", id, value: n});\n            }\n        }\n        return <input \n            type=\"text\" \n            value={value}\n            onChange={evt => handleChange(evt.target.value)}\n        />\n    }\n\n    return (\n        <div className=\"percentage\">\n            <div className=\"label\">{label}</div>\n            {PercentageLine(\"left\")}\n            {PercentageLine(\"right\")}\n        </div>\n    );\n}\n\ninterface DirectProps {\n    id: string;\n    label: string;\n    state: State;\n    dispatch: Dispatch<DISPATCHER_ACTION_DIRECT>;\n}\nexport const DirectDay = (props:DirectProps) => direct(\"expensesPerDay\") (props);\nexport const DirectMonth = (props:DirectProps) => direct(\"expensesPerMonth\") (props);\n\nconst direct = (category:\"expensesPerDay\" | \"expensesPerMonth\") => ({id, label, state, dispatch}:DirectProps) => {\n    const value = L.get([category, id]) (state);\n\n    const handleChange = (value:string) => {\n        const n = Number(value);\n        if(!isNaN(n)) {\n            dispatch({type: category, id, value: n});\n        }\n    }\n    return (\n        <div className=\"direct\">\n            <div className=\"label\">{label}</div>\n            <input \n                type=\"text\" \n                value={value}\n                onChange={evt => handleChange(evt.target.value)}\n            />\n        </div>\n    );\n}","import React from 'react';\nimport { nDays } from './constants';\n\n\ninterface ReportProps {\n    state: State;\n}\n\ntype ValidIndex = 0 | 1;\n\nexport const Report = ({state}:ReportProps) => {\n\n    const getPerc = (index:ValidIndex) => (label:keyof State[\"percentages\"]) => \n        (state.percentages[label][index])/100;\n\n\n    const getDayExpense = (index:ValidIndex) => (percLabel: keyof State[\"percentages\"], expensesLabel:keyof State[\"expensesPerDay\"]) => {\n        const expense = state.expensesPerDay[expensesLabel];\n        return nDays[percLabel] * (getPerc(index) (percLabel) * expense); \n    }\n    const getShabbat = (index:ValidIndex):number => \n        getDayExpense (index) (\"shabbat\", \"shabbat\");\n    \n    const getSunday = (index:ValidIndex):number => \n        getDayExpense (index) (\"sunday\", \"school\");\n\n    const getRegular = (index:ValidIndex):number => \n        getDayExpense (index) (\"regular\", \"school\");\n\n    const getChagim = (index:ValidIndex):number => \n        getDayExpense (index) (\"chagim\", \"chagim\");\n\n    const getSchoolVacation = (index:ValidIndex):number => \n        getDayExpense (index) (\"schoolVacation\", \"schoolVacation\");\n\n    const getRoom = (index:ValidIndex):number =>\n        //room is identical for both parents\n        state.expensesPerMonth.room;\n\n    const getClothing= (index:ValidIndex):number =>\n        //clothing is only mother's expense\n        index === 0 ? state.expensesPerMonth.clothing : 0;\n\n    const getMedicine= (index:ValidIndex):number =>\n        //medicine is only mother's expense\n        index === 0 ? state.expensesPerMonth.medicine : 0;\n\n    const getTotalExpenses = (index:ValidIndex):number => { \n        return getShabbat(index) \n            + getSunday(index) \n            + getRegular(index)\n            + getChagim(index)\n            + getSchoolVacation(index)\n            + getRoom(index)\n            + getClothing(index)\n            + getMedicine(index);\n    }\n\n    const motherExpenses = getTotalExpenses(0);\n    const fatherExpenses = getTotalExpenses(1);\n\n    const makeBreakdown = (index:ValidIndex) => {\n        const shabbatDays = getPerc (index) (\"shabbat\") * nDays.shabbat;\n        const sundayDays = getPerc (index) (\"sunday\") * nDays.sunday;\n        const regularDays = getPerc (index) (\"regular\") * nDays.regular;\n        const chagimDays = getPerc (index) (\"chagim\") * nDays.chagim;\n        const schoolVacationDays = getPerc (index) (\"schoolVacation\") * nDays.schoolVacation;\n        return (\n            <ul>\n                <li>{shabbatDays} shabbats: {getShabbat(index)} NIS</li>\n                <li>{sundayDays} sundays (non-work days): {getSunday(index)} NIS</li>\n                <li>{regularDays} regular schooldays: {getRegular(index)} NIS</li>\n                <li>{chagimDays} chagim: {getChagim(index)} NIS</li>\n                <li>{schoolVacationDays} school vacation: {getSchoolVacation(index)} NIS</li>\n                <li>room: {getRoom(index)} NIS</li>\n                <li>clothing: {getClothing(index)} NIS</li>\n                <li>medicine: {getMedicine(index)} NIS</li>\n                <li className=\"nobullet\"><div className=\"result left\">total: {getTotalExpenses(index)}</div></li>\n            </ul>\n        );\n    }\n    return (\n        <div className=\"report\">\n            <div className=\"finalResult\">\n                <div className=\"label\">If father owes 100% of the expenses</div>\n                <div className=\"label\">Then he gives the mother</div>\n                <div className=\"result\">{motherExpenses} NIS per month</div>\n\n                <div className=\"label red\">This is the absolute maximum. <br/><u>Any more than this is <i>spousal support</i></u></div>\n            </div>\n            <hr/>\n            <div className=\"smaller\">\n                <div className=\"label\">He actually spends a total of</div>\n                <div className=\"result\">{fatherExpenses + motherExpenses} NIS</div>\n                <hr/>\n                <div className=\"label\">Mother's breakdown:</div>\n                {makeBreakdown(0)}\n                <hr/>\n                <div className=\"label\">Father's breakdown:</div>\n                {makeBreakdown(1)}\n            </div>\n        </div>\n    )\n}\n","import * as L from \"partial.lenses\";\nimport * as R from \"ramda\";\n\nexport const reducer = (state:State, action: DISPATCHER_ACTION):State => {\n    switch(action.type) {\n        case \"perc-left\": \n        case \"perc-right\": {\n            const {type, value, id} = action;\n            const target_index = type === \"perc-left\" ? 0 : 1;\n            const other_index = type === \"perc-left\" ? 1 : 0;\n            const other_value = 100 - value;\n\n            return R.pipe(\n                L.set([\"percentages\", id, target_index]) (value),\n                L.set([\"percentages\", id, other_index]) (other_value)\n            ) (state);\n        };\n\n        case \"expensesPerDay\": \n        case \"expensesPerMonth\": {\n            const {type, value, id} = action;\n\n            return L.set([type, id]) (value) (state);\n        }\n\n        default: return state;\n    }\n}","const defaultState:State = {\n    percentages: {\n        shabbat: [50, 50],\n        sunday: [50, 50],\n        regular: [75,25],\n        chagim: [50,50],\n        schoolVacation: [85,15]\n    },\n\n    expensesPerDay: {\n        shabbat: 150,\n        school: 70,\n        chagim: 125,\n        schoolVacation: 100 \n    },\n\n    expensesPerMonth: {\n        room: 500,\n        clothing: 150,\n        medicine: 100\n    }\n}\n\nexport const getInitialState = ():State => {\n\n    const hashString = decodeURIComponent(window.location.href.split(\"#\")[1] || \"\");\n\n    try {\n        const hashState = JSON.parse(hashString);\n        if(validate(hashState)) {\n            console.log(\"using hash state\");\n            return hashState;\n        } else {\n            console.log(\"using default state (invalid hash state)\");\n            return defaultState;\n        }\n    } catch (e) {\n            console.log(\"using default state (corrupt or no hash state)\");\n        return defaultState;\n    }\n}\n\nconst validate = (state:State):boolean => {\n    if(state.expensesPerDay == null \n        || state.expensesPerMonth == null \n        || state.percentages == null) {\n        return false;\n    }\n\n    if(!validateNumber(state.expensesPerMonth.clothing)\n        || !validateNumber(state.expensesPerMonth.medicine)\n        || !validateNumber(state.expensesPerMonth.room)\n        || !validateNumber(state.expensesPerDay.chagim)\n        || !validateNumber(state.expensesPerDay.school)\n        || !validateNumber(state.expensesPerDay.schoolVacation)\n        || !validateNumber(state.expensesPerDay.shabbat)\n    ) {\n        return false;\n    }\n\n    if(!validatePair(state.percentages.chagim)\n        || !validatePair(state.percentages.regular)\n        || !validatePair(state.percentages.schoolVacation)\n        || !validatePair(state.percentages.shabbat)\n        || !validatePair(state.percentages.sunday)\n    ) {\n        return false;\n    }\n\n    return true;\n\n\n}\n\nconst validateNumber = (n:number):boolean => {\n    if((typeof n) !== \"number\" || isNaN(n) || n === Infinity) {\n        return false;\n    }\n    return true;\n}\n\nconst validatePair = ([n1,n2]:[number, number]):boolean => {\n    return true;\n}","\nimport React from 'react';\n\n\ntype PermalinkProps = {state: State};\n\nexport const Permalink = ({state}:PermalinkProps) => {\n    const str = JSON.stringify(state);\n    \n    const updatePermalink = () => {\n        window.location.hash = str;\n    }\n    return (\n        <div className=\"permalink\" onClick={updatePermalink}>\n            update permalink\n        </div>\n    );\n}","import React, {useReducer} from 'react';\nimport { nDays } from './constants';\nimport {Percentage, DirectDay, DirectMonth} from \"./widgets\";\nimport {Report} from \"./report\";\nimport {reducer} from \"./reducer\";\nimport {getInitialState} from \"./state\";\nimport {Permalink} from \"./permalink\";\n\nexport const App = () => {\n\n    const [state, dispatch] = useReducer(reducer, getInitialState());\n\n    return (\n        <div className=\"App\">\n        <header>\n            David's child support calculator\n        </header>\n        <Permalink state={state} />\n        <div className=\"inputs\">\n            <section> \n                <header>Parent's Schedule Split<br/><i>in percentages of Mother / Father</i></header>\n                <Percentage id=\"shabbat\" label=\"Shabbat\" state={state} dispatch={dispatch} />\n                <Percentage id=\"sunday\" label=\"Sunday (non-work day)\" state={state} dispatch={dispatch} />\n                <Percentage id=\"regular\" label=\"Regular work/school day\" state={state} dispatch={dispatch} />\n                <Percentage id=\"chagim\" label=\"Chagim\" state={state} dispatch={dispatch} />\n                <Percentage id=\"schoolVacation\" label=\"School Vacation\" state={state} dispatch={dispatch} />\n                <hr/>\n                <header>Children's Expenses Per Day<br/><i>in shekels</i></header>\n                <DirectDay id=\"shabbat\" label=\"Shabbat\" state={state} dispatch={dispatch} />\n                <DirectDay id=\"school\" label=\"Regular School Days\" state={state} dispatch={dispatch} />\n                <DirectDay id=\"chagim\" label=\"Chagim\" state={state} dispatch={dispatch} />\n                <DirectDay id=\"schoolVacation\" label=\"School Vacation\" state={state} dispatch={dispatch} />\n                <hr/>\n                <header>Children's Expenses Per Month<br/><i>in shekels</i></header>\n                <DirectMonth id=\"room\" label=\"House Rental (additional room)\" state={state} dispatch={dispatch} />\n                <DirectMonth id=\"clothing\" label=\"Clothing\" state={state} dispatch={dispatch} />\n                <DirectMonth id=\"medicine\" label=\"Medicine\" state={state} dispatch={dispatch} />\n            </section>\n            <section>\n                <header>Live Calculated Amounts<br/><i>in shekels</i></header>\n                <hr/>\n                <Report state={state} />\n            </section>\n            <section>\n                <header>Explanation</header>\n                <p>\n                    <b>How to use:&nbsp;</b>\n                    Adjust the amounts on the far-left, according to the notes below. The results will be updated immediately.\n                    <br/>\n                </p>\n                <p>\n                    <b>All expenses&nbsp;</b>\n                    are in terms of <i>necessities</i>. While the parents may agree on \"extras\" beyond the scope of this calculator, they are not obligatory.\n                    Each day should consider the necessary expenses specifically for that day (primarily food and travel).\n                    <br/>\n                </p>\n                <p>\n                    <b>Rental&nbsp;</b>\n                    is the same cost per-parent because it's the cost of an additional bedroom and perhaps a slightly larger dining room for the children.\n                    Utilities should be considered as the per-day expenses.\n                    <br/>\n                </p>\n                <p>\n                    <b>Clothing and Medicine&nbsp;</b>\n                    are a single cost (to the father).\n                    <br/>\n                </p>\n                <p>\n                    <b>Chagim&nbsp;</b>\n                    have a variety of overlap with shabbat and it changes based on both the parents schedule and holiday cycle of that year. \n                    Instead of analyzing a decade of exact projections, we make an approximation by removing 6 from the ~30 possible \"holiday expense days\" and then the rest \"fall\" on regular school days.\n                    These 24 days are divided over 12 months yielding 2 holidays that replace regular school days each month\n                    It is not perfect, but the difference is ultimately negligable.\n                    <br/>\n                </p>\n                <p>\n                    <b>School vacation&nbsp;</b>\n                    is similar to chagim. However, chagim are also work holidays - and school vacation is not, hence it may be divided differently for schedule purposes.\n                    We assume around 72 children's school vacation days that are not also work holidays (for example summer and the week leading up to pesach).\n                    8 of these are definitely shabbat (e.g. the summer). Another 4 are removed due to falling on shabbat in the year. \n                    This leaves us with a final number of 60 vacation days to account for, divided over 12 months gives us 5 per month.\n                    <br/>\n                </p>\n                <p>\n                    <b>Final amount&nbsp;</b>\n                    is the complete expenses for the children and should be considered an <i>upper bound</i>. For example it does not include government subsidies or tax returns which could be considered a reduction on top of this.\n                    <br/>\n                </p>\n                <b>Exact breakdown&nbsp;</b>\n                per month then becomes:\n                <ul>\n                    <li>{nDays.shabbat} shabbats</li>\n                    <li>{nDays.sunday} sundays (non-work days)</li>\n                    <li>{nDays.regular} regular schooldays</li>\n                    <li>{nDays.chagim} chagim</li>\n                    <li>{nDays.schoolVacation} school vacation</li>\n                    <li>room is expense to both parents</li>\n                    <li>clothing and medicine are only expense to mother (paid by father)</li>\n                </ul>\n                <br/>\n            </section>\n        </div>\n        </div>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from \"./app/app\";\nimport './styles/styles.css';\nimport * as serviceWorker from './workers/serviceWorker';\n\nconst main = () => ReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nmain();"],"sourceRoot":""}